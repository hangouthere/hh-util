// Vitest Snapshot v1

exports[`DependencyManager > Build Accessor Chain Map > should build a proper Plugin Dependency tree from Plugin Names 1`] = `
{
  "Plugin1-v0.0.1": [
    "Plugin2-v0.0.1",
  ],
  "Plugin3-v0.0.1": [
    "Plugin1-v0.0.1",
    "Plugin4-v0.0.1",
  ],
  "Plugin4-v0.0.1": [
    "Plugin2-v0.0.1",
  ],
}
`;

exports[`DependencyManager > Build Plugin Name Map > should return a named mapping of Plugin Behaviours 1`] = `
{
  "Plugin1-v0.0.1": [
    {
      "manifest": {
        "accessors": {
          "plug2": "plugin2-behaviour",
        },
        "behaviours": [
          "plugin1-behaviour",
          "common1",
        ],
        "name": "Plugin1",
        "pluginPath": "",
        "type": "SERVICE",
        "version": "0.0.1",
      },
      "pluginDefinition": [Function],
    },
  ],
  "Plugin2-v0.0.1": [
    {
      "manifest": {
        "behaviours": [
          "plugin2-behaviour",
          "common1",
        ],
        "name": "Plugin2",
        "pluginPath": "",
        "type": "SERVICE",
        "version": "0.0.1",
      },
      "pluginDefinition": [Function],
    },
  ],
  "Plugin3-v0.0.1": [
    {
      "manifest": {
        "accessors": {
          "plug1": "Plugin1-v0.0.1",
          "plug4": "plugin4-behaviour",
        },
        "behaviours": [
          "plugin3-behaviour",
        ],
        "name": "Plugin3",
        "pluginPath": "",
        "type": "SERVICE",
        "version": "0.0.1",
      },
      "pluginDefinition": [Function],
    },
  ],
  "Plugin4-v0.0.1": [
    {
      "manifest": {
        "accessors": {
          "plug2": "Plugin2-v0.0.1",
        },
        "behaviours": [
          "plugin4-behaviour",
        ],
        "name": "Plugin4",
        "pluginPath": "",
        "type": "SERVICE",
        "version": "0.0.1",
      },
      "pluginDefinition": [Function],
    },
  ],
  "common1": [
    {
      "manifest": {
        "accessors": {
          "plug2": "plugin2-behaviour",
        },
        "behaviours": [
          "plugin1-behaviour",
          "common1",
        ],
        "name": "Plugin1",
        "pluginPath": "",
        "type": "SERVICE",
        "version": "0.0.1",
      },
      "pluginDefinition": [Function],
    },
    {
      "manifest": {
        "behaviours": [
          "plugin2-behaviour",
          "common1",
        ],
        "name": "Plugin2",
        "pluginPath": "",
        "type": "SERVICE",
        "version": "0.0.1",
      },
      "pluginDefinition": [Function],
    },
  ],
  "plugin1-behaviour": [
    {
      "manifest": {
        "accessors": {
          "plug2": "plugin2-behaviour",
        },
        "behaviours": [
          "plugin1-behaviour",
          "common1",
        ],
        "name": "Plugin1",
        "pluginPath": "",
        "type": "SERVICE",
        "version": "0.0.1",
      },
      "pluginDefinition": [Function],
    },
  ],
  "plugin2-behaviour": [
    {
      "manifest": {
        "behaviours": [
          "plugin2-behaviour",
          "common1",
        ],
        "name": "Plugin2",
        "pluginPath": "",
        "type": "SERVICE",
        "version": "0.0.1",
      },
      "pluginDefinition": [Function],
    },
  ],
  "plugin3-behaviour": [
    {
      "manifest": {
        "accessors": {
          "plug1": "Plugin1-v0.0.1",
          "plug4": "plugin4-behaviour",
        },
        "behaviours": [
          "plugin3-behaviour",
        ],
        "name": "Plugin3",
        "pluginPath": "",
        "type": "SERVICE",
        "version": "0.0.1",
      },
      "pluginDefinition": [Function],
    },
  ],
  "plugin4-behaviour": [
    {
      "manifest": {
        "accessors": {
          "plug2": "Plugin2-v0.0.1",
        },
        "behaviours": [
          "plugin4-behaviour",
        ],
        "name": "Plugin4",
        "pluginPath": "",
        "type": "SERVICE",
        "version": "0.0.1",
      },
      "pluginDefinition": [Function],
    },
  ],
}
`;

exports[`DependencyManager > Build Plugin Name Map > should return a named mapping of all Plugins 1`] = `
{
  "Plugin1-v0.0.1": {
    "manifest": {
      "accessors": {
        "plug2": "plugin2-behaviour",
      },
      "behaviours": [
        "plugin1-behaviour",
        "common1",
      ],
      "name": "Plugin1",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "pluginDefinition": [Function],
  },
  "Plugin2-v0.0.1": {
    "manifest": {
      "behaviours": [
        "plugin2-behaviour",
        "common1",
      ],
      "name": "Plugin2",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "pluginDefinition": [Function],
  },
  "Plugin3-v0.0.1": {
    "manifest": {
      "accessors": {
        "plug1": "Plugin1-v0.0.1",
        "plug4": "plugin4-behaviour",
      },
      "behaviours": [
        "plugin3-behaviour",
      ],
      "name": "Plugin3",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "pluginDefinition": [Function],
  },
  "Plugin4-v0.0.1": {
    "manifest": {
      "accessors": {
        "plug2": "Plugin2-v0.0.1",
      },
      "behaviours": [
        "plugin4-behaviour",
      ],
      "name": "Plugin4",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "pluginDefinition": [Function],
  },
}
`;

exports[`DependencyManager > Loading Plugin Definitions > should load the entire Plugin Dependency tree into a single Promise result 1`] = `
pluginDef {
  "accessors": null,
  "enabled": false,
  "host": {
    "getOption": [MockFunction spy] {
      "calls": [
        [
          "Plugins.Plugin2.enabled",
        ],
      ],
      "results": [
        {
          "type": "return",
          "value": undefined,
        },
      ],
    },
    "setOption": [MockFunction spy],
  },
  "manifest": {
    "behaviours": [
      "plugin2-behaviour",
      "common1",
      "Plugin2",
    ],
    "name": "Plugin2",
    "pluginPath": "",
    "type": "SERVICE",
    "version": "0.0.1",
  },
  "status": 0,
}
`;

exports[`DependencyManager > Loading Plugin Definitions > should load the entire Plugin Dependency tree into a single Promise result 2`] = `
pluginDef {
  "accessors": {
    "plug2": [
      pluginDef {
        "accessors": {},
        "enabled": false,
        "host": {
          "getOption": [MockFunction spy] {
            "calls": [
              [
                "Plugins.Plugin2.enabled",
              ],
            ],
            "results": [
              {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "setOption": [MockFunction spy],
        },
        "manifest": {
          "behaviours": [
            "plugin2-behaviour",
            "common1",
            "Plugin2",
          ],
          "name": "Plugin2",
          "pluginPath": "",
          "type": "SERVICE",
          "version": "0.0.1",
        },
        "status": 0,
      },
    ],
  },
  "enabled": false,
  "host": {
    "getOption": [MockFunction spy] {
      "calls": [
        [
          "Plugins.Plugin2.enabled",
        ],
      ],
      "results": [
        {
          "type": "return",
          "value": undefined,
        },
      ],
    },
    "setOption": [MockFunction spy],
  },
  "manifest": {
    "accessors": {
      "plug2": "plugin2-behaviour",
    },
    "behaviours": [
      "plugin1-behaviour",
      "common1",
      "Plugin1",
    ],
    "name": "Plugin1",
    "pluginPath": "",
    "type": "SERVICE",
    "version": "0.0.1",
  },
  "status": 0,
}
`;

exports[`DependencyManager > Loading Plugin Definitions > should load the entire Plugin Dependency tree into a single Promise result 3`] = `
{
  "Plugin1-v0.0.1": Promise {},
  "Plugin2-v0.0.1": Promise {},
}
`;

exports[`DependencyManager > Loading Plugin Definitions > should not allow known plugins to be re-loaded 1`] = `
{
  "Plugin1-v0.0.1": Promise {},
}
`;

exports[`DependencyManager > Loading Plugin Definitions > should not allow known plugins to be re-loaded 2`] = `
{
  "Plugin1-v0.0.1": [Error: [DependencyChainError] - Plugin1-v0.0.1 has failed an entire dependency chain],
}
`;

exports[`DependencyManager > Loading a Chain Map > should load an entire Chain Map from the Plugin Name Map 1`] = `
[
  pluginDef {
    "accessors": {},
    "enabled": false,
    "host": {
      "getOption": [MockFunction spy],
      "setOption": [MockFunction spy],
    },
    "manifest": {
      "accessors": {
        "plug2": "plugin2-behaviour",
      },
      "behaviours": [
        "plugin1-behaviour",
        "common1",
        "Plugin1",
      ],
      "name": "Plugin1",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "status": 0,
  },
  pluginDef {
    "accessors": {},
    "enabled": false,
    "host": {
      "getOption": [MockFunction spy],
      "setOption": [MockFunction spy],
    },
    "manifest": {
      "behaviours": [
        "plugin2-behaviour",
        "common1",
        "Plugin2",
      ],
      "name": "Plugin2",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "status": 0,
  },
  pluginDef {
    "accessors": {},
    "enabled": false,
    "host": {
      "getOption": [MockFunction spy],
      "setOption": [MockFunction spy],
    },
    "manifest": {
      "accessors": {
        "plug1": "Plugin1-v0.0.1",
        "plug4": "plugin4-behaviour",
      },
      "behaviours": [
        "plugin3-behaviour",
        "Plugin3",
      ],
      "name": "Plugin3",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "status": 0,
  },
  pluginDef {
    "accessors": {},
    "enabled": false,
    "host": {
      "getOption": [MockFunction spy],
      "setOption": [MockFunction spy],
    },
    "manifest": {
      "accessors": {
        "plug2": "Plugin2-v0.0.1",
      },
      "behaviours": [
        "plugin4-behaviour",
        "Plugin4",
      ],
      "name": "Plugin4",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "status": 0,
  },
]
`;

exports[`DependencyManager > Loading a Chain Map > should load an entire Chain Map from the Plugin Name Map 2`] = `
{
  "Plugin1-v0.0.1": {
    "manifest": {
      "accessors": {
        "plug2": "plugin2-behaviour",
      },
      "behaviours": [
        "plugin1-behaviour",
        "common1",
        "Plugin1",
      ],
      "name": "Plugin1",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "pluginDefinition": [Function],
  },
  "Plugin2-v0.0.1": {
    "manifest": {
      "behaviours": [
        "plugin2-behaviour",
        "common1",
        "Plugin2",
      ],
      "name": "Plugin2",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "pluginDefinition": [Function],
  },
  "Plugin3-v0.0.1": {
    "manifest": {
      "accessors": {
        "plug1": "Plugin1-v0.0.1",
        "plug4": "plugin4-behaviour",
      },
      "behaviours": [
        "plugin3-behaviour",
        "Plugin3",
      ],
      "name": "Plugin3",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "pluginDefinition": [Function],
  },
  "Plugin4-v0.0.1": {
    "manifest": {
      "accessors": {
        "plug2": "Plugin2-v0.0.1",
      },
      "behaviours": [
        "plugin4-behaviour",
        "Plugin4",
      ],
      "name": "Plugin4",
      "pluginPath": "",
      "type": "SERVICE",
      "version": "0.0.1",
    },
    "pluginDefinition": [Function],
  },
}
`;

exports[`DependencyManager > Loading a Chain Map > should properly identify individual failed plugins upon loading 1`] = `
{
  "Plugin2-v0.0.1": [Error: [DependencyChainError] - Plugin2-v0.0.1 has failed an entire dependency chain],
}
`;

exports[`DependencyManager > Utilities > should build an Alias Map for Accessors 1`] = `
{
  "plug2": [
    pluginDef {
      "accessors": {},
      "enabled": false,
      "host": {
        "getOption": [MockFunction spy],
        "setOption": [MockFunction spy],
      },
      "manifest": {
        "behaviours": [
          "plugin2-behaviour",
          "common1",
          "Plugin2",
        ],
        "name": "Plugin2",
        "pluginPath": "",
        "type": "SERVICE",
        "version": "0.0.1",
      },
      "status": 0,
    },
  ],
}
`;

exports[`DependencyManager > Utilities > should return a list of all Accessors within a group of Plugins 1`] = `
[
  "Plugin1-v0.0.1",
  "Plugin2-v0.0.1",
  "plugin2-behaviour",
  "plugin4-behaviour",
]
`;
